// File: jenkinsfile.dockerhub
// Note: Requires Jenkins Docker Pipeline plugin to be installed

pipeline {
   // agent any
   agent { label "docker" }
   environment {
      registry = "YourDockerhubAccount/YourRepository"
      registryCredential = 'dockerhub_id' // id for a Jenkins global credential
      dockerImage = 'rackping_api'

      RP_USER=""
      RP_PASSWORD=""
      RP_API_KEY=""
   }
   stages {
      stage('Clone') {
         steps {
            echo 'Cloning'
            git url: 'https://github.com/RackPing/api_client_samples.git', branch: 'main'
         
            // RackPing REST API credentials are appended to the env template and used in the docker container during the Test stage
            dir("Docker") {
               sh "echo RP_USER=$RP_USER         >>env.list"
               sh "echo RP_PASSWORD=$RP_PASSWORD >>env.list"
               sh "echo RP_API_KEY=$RP_API_KEY   >>env.list"
            }
         }
      }
      stage('Build') {
         steps {
            echo 'Building'
            script {
               dir("./Docker") {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
         }
      }
      stage('Test') {
         steps {
               echo 'Testing'
               dir("Docker") {
                   sh "./make.sh test"
               }
         }
      }
      stage('Deploy') {
         steps {
               echo 'Deploying'
               script {
                  docker.withRegistry('', registryCredential) {
                     dockerImage.push()
                  }
               }
         }
      }
      stage('Clean') {
         steps {
               echo 'Cleaning'
               sh "docker rmi $registry:$BUILD_NUMBER"
         }
      }
   }
}

